{"name": "test_open_yandex", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@allure.feature(\"–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞\")\n    @allure.story(\"–û—Ç–∫—Ä—ã—Ç–∏–µ –Ø–Ω–¥–µ–∫—Å–∞\")\n    def test_open_yandex():\n        driver = None\n        try:\n            with allure.step(\"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥–ª—è –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã –Ø–Ω–¥–µ–∫—Å–∞\"):\n                chrome_options = Options()\n    \n                # üö´ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è\n                chrome_options.add_argument(\"--no-sandbox\")\n                chrome_options.add_argument(\"--disable-dev-shm-usage\")\n                chrome_options.add_argument(\"--disable-blink-features=AutomationControlled\")\n                chrome_options.add_argument(\"--disable-infobars\")\n                chrome_options.add_argument(\"--disable-extensions\")\n                chrome_options.add_argument(\"--disable-plugins-discovery\")\n                chrome_options.add_argument(\"--disable-popup-blocking\")\n                chrome_options.add_argument(\"--disable-notifications\")\n                chrome_options.add_argument(\"--disable-geolocation\")\n                chrome_options.add_argument(\"--disable-save-password-bubble\")\n                chrome_options.add_argument(\"--no-first-run\")\n                chrome_options.add_argument(\"--no-default-browser-check\")\n                chrome_options.add_argument(\"--disable-web-security\")  # –î–ª—è —Ç–µ—Å—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)\n                chrome_options.add_argument(\"--disable-site-isolation-trials\")\n    \n                # üåê –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π User-Agent (Chrome 128, Windows 10)\n                chrome_options.add_argument(\n                    \"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36\"\n                )\n    \n                # üß© –°–∫—Ä—ã–≤–∞–µ–º —Å–ª–µ–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏\n                chrome_options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])\n                chrome_options.add_experimental_option(\"useAutomationExtension\", False)\n    \n                # ‚úÖ –ü—É—Ç—å –∫ chromedriver.exe\n                driver_path = os.path.abspath(\"chromedriver.exe\")\n                if not os.path.exists(driver_path):\n                    raise FileNotFoundError(f\"–ù–µ –Ω–∞–π–¥–µ–Ω chromedriver.exe –ø–æ –ø—É—Ç–∏: {driver_path}\")\n    \n                driver = webdriver.Chrome(\n                    service=Service(driver_path),\n                    options=chrome_options\n                )\n    \n                # üõ°Ô∏è –°–∫—Ä—ã–≤–∞–µ–º webdriver —á–µ—Ä–µ–∑ CDP ‚Äî –¥–≤–æ–π–Ω–∞—è –∑–∞—â–∏—Ç–∞\n                driver.execute_cdp_cmd(\"Page.addScriptToEvaluateOnNewDocument\", {\n                    \"source\": \"\"\"\n                        Object.defineProperty(navigator, 'webdriver', {\n                            get: () => false,\n                        });\n                        Object.defineProperty(navigator, 'languages', {\n                            get: () => ['ru-RU', 'ru', 'en-US', 'en'],\n                        });\n                        Object.defineProperty(navigator, 'plugins', {\n                            get: () => [new Plugin(), new Plugin(), new Plugin()],\n                        });\n                        Object.defineProperty(navigator, 'chrome', {\n                            get: () => ({\n                                runtime: {},\n                                loadTimes: () => {},\n                                csi: () => {}\n                            }),\n                        });\n                        Object.defineProperty(navigator, 'permissions', {\n                            get: () => ({\n                                query: () => Promise.resolve({ state: 'granted' })\n                            }),\n                        });\n                        window.chrome = {\n                            runtime: {},\n                            loadTimes: () => {},\n                            csi: () => {}\n                        };\n                        window.outerHeight = 900;\n                        window.outerWidth = 1600;\n                        window.innerHeight = 800;\n                        window.innerWidth = 1500;\n                        window.screenY = 0;\n                        window.screenX = 0;\n                        window.screen.availHeight = 1040;\n                        window.screen.availWidth = 1920;\n                        window.screen.height = 1080;\n                        window.screen.width = 1920;\n                    \"\"\"\n                })\n    \n                driver.implicitly_wait(10)\n                driver.set_window_size(1920, 1080)\n    \n            with allure.step(\"–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ https://ya.ru\"):\n                driver.get(\"https://ya.ru\")\n                logger.info(f\"–¢–µ–∫—É—â–∏–π URL: {driver.current_url}\")\n                logger.info(f\"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {driver.title}\")\n    \n            with allure.step(\"–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏\"):\n                # ‚è≥ –ü–æ–¥–æ–∂–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ ‚Äî –¥–∞–¥–∏–º —à–∞–Ω—Å –æ–±–æ–π—Ç–∏ –∑–∞—â–∏—Ç—É\n                time.sleep(3)\n    \n                # üîç –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –∫–∞–ø—á–∞ –ª–∏ —É –Ω–∞—Å?\n                if \"captcha\" in driver.current_url.lower() or \"–í—ã –Ω–µ —Ä–æ–±–æ—Ç?\" in driver.title:\n                    # üß© –ï—Å–ª–∏ –∫–∞–ø—á–∞ ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ\n                    with allure.step(\"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞ ‚Äî –∏–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\"):\n                        driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n                        time.sleep(2)\n                        driver.execute_script(\"window.scrollTo(0, 0);\")\n                        time.sleep(2)\n                        driver.refresh()\n                        time.sleep(3)\n    \n                # üéØ –ñ–¥—ë–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç \"–Ø–Ω–¥–µ–∫—Å\"\n>               WebDriverWait(driver, 15).until(\n                    EC.title_contains(\"–Ø–Ω–¥–µ–∫—Å\")\n                )\n\ntest_yandex.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"96fe5d487b75d02f2540e40392b88656\")>\nmethod = <function title_contains.<locals>._predicate at 0x0000000003C98790>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥–ª—è –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã –Ø–Ω–¥–µ–∫—Å–∞", "status": "passed", "start": 1756322158679, "stop": 1756322167769}, {"name": "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ https://ya.ru", "status": "passed", "start": 1756322167769, "stop": 1756322178975}, {"name": "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\–ê–ª–µ–∫—Å–∞–Ω–¥—Ä\\Desktop\\Sprint_6\\test_yandex.py\", line 126, in test_open_yandex\n    WebDriverWait(driver, 15).until(\n  File \"c:\\users\\–∞–ª–µ–∫—Å–∞–Ω–¥—Ä\\desktop\\sprint_6\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞ ‚Äî –∏–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "status": "passed", "start": 1756322182321, "stop": 1756322190311}], "start": 1756322178975, "stop": 1756322205535}, {"name": "–û—à–∏–±–∫–∞ ‚Äî –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç", "status": "passed", "attachments": [{"name": "–°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏", "source": "e6c0f2e0-cb93-44a7-ba71-3fb39c5fa752-attachment.png", "type": "image/png"}], "start": 1756322205535, "stop": 1756322206525}, {"name": "–ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞", "status": "passed", "start": 1756322206525, "stop": 1756322208927}], "attachments": [{"name": "log", "source": "a8eeef07-58a0-499f-9dc0-7693ab05e5fc-attachment.txt", "type": "text/plain"}], "start": 1756322158679, "stop": 1756322208928, "uuid": "598afca9-81fe-43d3-85a3-01fe84ec4bb6", "historyId": "bcbf86a74da98aeb2134213edd23344d", "testCaseId": "bcbf86a74da98aeb2134213edd23344d", "fullName": "test_yandex#test_open_yandex", "labels": [{"name": "feature", "value": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞"}, {"name": "story", "value": "–û—Ç–∫—Ä—ã—Ç–∏–µ –Ø–Ω–¥–µ–∫—Å–∞"}, {"name": "suite", "value": "test_yandex"}, {"name": "host", "value": "WIN-R0DO30T3SQ2"}, {"name": "thread", "value": "4148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_yandex"}], "titlePath": ["test_yandex.py"]}